---
import Layout from "@/layouts/Layout.astro";
import { nocodbHost, read } from "@/lib/nocodb";
import { canRead } from "@/lib/auth";
import pdf_icon from "../img/pdf-icon.png";
import wav_icon from "../img/wav-icon.png";

import { getSession } from "auth-astro/server";

import { Image } from "astro:assets";
const session = await getSession(Astro.request);

const [table, files] = (
  await Promise.all([
    read({ id: Astro.params.code, view: "vwtuajfhp2i1gnf3" }),
    read({ id: Astro.params.code, view: "vwq7xpp3j049pljs" }),
  ])
).flat();
---

<Layout>
  <h1>Participant code: {table["participant_code"]}</h1>

  <h2>English</h2>
  <div style="max-width: 640px; margin:auto">
    <audio
      controls
      controlslist="nodownload"
      src={files["en_wav"]
        ? `${nocodbHost}/${files["en_wav"][0]["signedPath"]}`
        : ""}
      style="height: 120px; width: 100%;"
    >
    </audio>
    <div style="height:600px; position:relative; overflow:hidden;">
      <iframe
        src={files["en_pdf"]
          ? `${nocodbHost}/${files["en_pdf"][0]["signedPath"]}#toolbar=0&pagemode=none`
          : ""}
        style="width:100%; height:632px; position:absolute; bottom:0;"></iframe>
    </div>
  </div>
  <h2>Spanish</h2>
  <div style="max-width: 640px; margin:auto">
    <audio
      controls
      controlslist="nodownload"
      src={files["es_wav"]
        ? `${nocodbHost}/${files["es_wav"][0]["signedPath"]}`
        : ""}
      style="height: 120px; width: 100%;"
    >
    </audio>
    <div style="height:600px; position:relative; overflow:hidden;">
      <iframe
        src={files["es_pdf"]
          ? `${nocodbHost}/${files["es_pdf"][0]["signedPath"]}#toolbar=0&pagemode=none`
          : ""}
        style="width:100%; height:632px; position:absolute; bottom:0;"></iframe>
    </div>
  </div>

  {
    canRead(session) && (
      <>
        <h2>Download</h2>
        {[
          {
            label: "High-definition English audio file",
            file_meta: files["en_wav"],
            type: "wav",
          },
          {
            label: "High-definition Spanish audio file",
            file_meta: files["es_wav"],
            type: "wav",
          },
          {
            label: "English interview transcript",
            file_meta: files["en_pdf"],
            type: "pdf",
          },
          {
            label: "Spanish interview transcript",
            file_meta: files["es_pdf"],
            type: "pdf",
          },
        ].map((file) => (
          <button
            class="big-button"
            style={`width:360px; background-color: ${file.file_meta ? "var(--ucsc-blue)" : "#888"}; color:white; margin: 1rem;`}
          >
            <a
              href={
                file.file_meta
                  ? `${nocodbHost}/${file.file_meta["signedPath"]}`
                  : "#"
              }
              download
              target="_blank"
              style="text-decoration: none; display: flex; align-items: center; justify-content: space-between; color:white;"
            >
              <Image
                src={{ wav: wav_icon, pdf: pdf_icon }[file.type]}
                alt="icon"
                width={32}
                height={32}
              />
              <span style="padding: 0.5rem;">
                {file.label}
                <br />
                {` (${file.type}, ${((bytes) => {
                  const units = ["B", "kB", "MB", "GB"];
                  let ui = 0;
                  while (bytes > 1024) {
                    bytes /= 1024;
                    ui++;
                  }
                  return `${bytes.toFixed(2).slice(0, bytes > 100 ? 3 : 4)} ${units[ui]}`;
                })(file.file_meta ? file.file_meta[0]["size"] : 0)})`}
              </span>
            </a>
          </button>
        ))}
      </>
    )
  }

  <h2>Information</h2>
  <table style="width: 100%;">
    <tbody>
      {
        Object.entries(table).map((kv) => (
          <tr>
            <td style="width: 300px;">
              {kv[0][0].toUpperCase() + kv[0].replaceAll("_", " ").slice(1)}
            </td>
            <td style="width: 240px;">{kv[1]}</td>
          </tr>
        ))
      }
    </tbody>
  </table>
</Layout>
) }
